#hdr
#include <3ds.h>

extern "C"
{
#include <math.h>
}

#include "game/game.hpp"

using MM::Game;
using MM::GFX::TextureUnit;
#end


namespace MM
{
    namespace GAME
    {
        namespace MENU
        {
            class GUIElement
            {
            public:
                s16 x,y;
                u16 w,h;
                
                GUIElement(s16 x, s16 y, u16 w, u16 h) : x(x), y(y), w(w), h(h)
                {
                    
                }
                
                virtual void Render(s16 rx, s16 ry)
                {
                    gfxw_drawrect(rx, ry, this->w, this->h, 0xFF423607);
                }
                
                virtual void Tick()
                {
                    
                }
                
                virtual void TouchStart(s16 x, s16 y)
                {
                    
                }
                
                virtual void TouchHold(s16 x, s16 y)
                {
                    
                }
                
                virtual void TouchRelease()
                {
                    
                }
                
                virtual ~GUIElement()
                {
                    
                }
                
                void ChildOffset(GUIElement* e, s16* tx, s16* ty)
                {
                    if(tx)
                    {
                        s16 rx = e->x;
                        if(rx == -0x8000) rx = (this->w / 2) - (e->w / 2);
                        else if(((rx >> 15) & 1) ^ ((rx >> 14) & 1)) rx = this->w + rx;
                        *tx += rx + this->x;
                    }
                    if(ty)
                    {
                        s16 ry = e->y;
                        if(ry == -0x8000) ry = (this->h / 2) - (e->h / 2);
                        else if(((ry >> 15) & 1) ^ ((ry >> 14) & 1)) ry = this->h + ry;
                        *ty += ry + this->y;
                    }
                }
            };
        }
    }
}
