#hdr
#include <3ds.h>

extern "C"
{
#include <math.h>
}

#include <functional>

#include "game/game.hpp"

#include "game/menu/gui/GUIElement.hpp"

using MM::Game;
using MM::GFX::TextureUnit;
using MM::GAME::MENU::GUIElement;
#end


namespace MM
{
    namespace GAME
    {
        namespace MENU
        {
            class GUIButton : public GUIElement
            {
            protected:
                char text[256];
                
                
            public:
                
                std::function<void(GUIButton* dis, s16 x, s16 y)> clickhandler;
                
                
                GUIButton(s16 x, s16 y, u16 w, u16 h, const char* label, std::function<void(GUIButton* dis, s16 x, s16 y)> clickhandler) : GUIElement(x, y, w, h), clickhandler(clickhandler)
                {
                    strncpy(text, label, 256);
                }
                
                virtual void Render(s16 rx, s16 ry)
                {
                    gfxw_drawrect(rx, ry, w, h, 0xFF423607);
                    Game::i->mono8->RenderString(rx + (w >> 1) - (Game::i->mono8->CalcWidth(text) >> 1), (ry + (h >> 1)) - (Game::i->mono8->h >> 1), text, 0xFF, 0xA1A193);
                }
                
                virtual void TouchStart(s16 x, s16 y)
                {
                    if(clickhandler) clickhandler(this, x, y);
                }
            };
        }
    }
}
